"""

Exercise: gcd iter

5.0/5.0 points (graded)

ESTIMATED TIME TO COMPLETE: 5 minutes

The greatest common divisor of two positive integers is the largest integer that divides each of them without remainder. For example,

gcd(2, 12) = 2

gcd(6, 12) = 6

gcd(9, 12) = 3

gcd(17, 12) = 1

Write an iterative function, gcdIter(a, b), that implements this idea. One easy way to do this is to begin with 
a test value equal to the smaller of the two input arguments, and iteratively reduce this test value by 1 until you either reach 
a case where the test divides both a and b without remainder, or you reach 1.

"""

# My code:

def gcdIter(a, b):
    '''
    a, b: positive integers
    
    returns: a positive integer, the greatest common divisor of a & b.
    '''
    testValue = min(a, b)

    # Keep looping until testValue divides both a & b evenly
    while a % testValue != 0 or b % testValue != 0:
        testValue -= 1

    return testValue
    
    
    # Test numbers are:
    
    #Test: gcdIter(132, 132)    output:132
    #Test: gcdIter(104, 48)     output:8
    #Test: gcdIter(264, 209)    output:11
    #Test: gcdIter(273, 117)    output:39
    #Test: gcdIter(72, 252)     output:36
    #Test: gcdIter(91, 104)     output:13
    #Test: gcdIter(8, 25)       output:1
    #Test: gcdIter(204, 60)     output:12
    #Test: gcdIter(234, 342)    output:18
    #Test: gcdIter(45, 144)     output:9
    
    #Passed all test numbers. Running successfully!
